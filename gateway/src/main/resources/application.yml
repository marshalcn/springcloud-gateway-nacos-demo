
spring:
  # 配置文件名称，用来标识不同环境的配置。由 spring.profiles.active 的值来决定使用哪组配置。
  ## 转发指定服务并传入参数
  application:
    # 应用名称
    name: gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: 10.0.66.101:8848
    gateway:
      discovery:
        locator:
          # 是否和服务注册与发现组件结合，设置为 true 后可以直接使用应用名称调用服务
          enabled: true
      # 路由（routes：路由，它由唯一标识（ID）、目标服务地址（uri）、一组断言（predicates）和一组过滤器组成（filters）。filters 不是必需参数。）
      routes:
        # 路由标识（id：标识，具有唯一性）   转发指定服务并传入参数
        - id: proxy-main
          # 目标服务地址（uri：地址，请求转发后的地址）
          uri: lb://main-service
          predicates:
            ## 转发地址格式为 uri/archive
            - Path=/ach/**
          filters:
            - StripPrefix=1
              # 路由标识（id：标识，具有唯一性）   转发指定服务并传入参数
        - id: proxy-sys
      # 目标服务地址（uri：地址，请求转发后的地址）
          uri: lb://sys-service
          predicates:
            ## 转发地址格式为 uri/archive
            - Path=/bat/**
          filters:
          - StripPrefix=1
          - name: Hystrix
            args:
              name: fallbackcmd
              ### fallback 时调用的方法 http://localhost:8000/fallback
              fallbackUri: forward:/fallback
#          - name: RequestRateLimiter
#            args:
#              key-resolver: '#{@uriKeyResolver}'
#              ### 希望允许用户每秒处理多少个请求
#              redis-rate-limiter.replenishRate: 1
#              ### 用户允许在一秒钟内完成的最大请求数
#              redis-rate-limiter.burstCapacity: 3
#hystrix:
#  command:
#    fallbackcmd:
#      execution:
#        isolation:
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 20000


#logging:
#  level:
#    # log 级别
#    org.springframework.cloud.gateway: debug

#eureka:
#  instance:
#    # 使用 ip 代替实例名
#    prefer-ip-address: true
#    # 实例的主机名
#    hostname: 127.0.0.1
#    # 实例的 ID 规则
#    instance-id: GATEWAY-SERVICE
#  client:
#    serviceUrl:
#      # 注册中心地址
#      defaultZone: http://eurekalo.com:8761/eureka/